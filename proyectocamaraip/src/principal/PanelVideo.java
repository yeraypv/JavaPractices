package principal;

import principal.Punto;
import java.awt.Color;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.image.BufferedImage;
import java.io.IOException;
import java.net.MalformedURLException;
import java.net.URL;
import java.util.ArrayList;
import java.util.List;
import javax.imageio.ImageIO;


public class PanelVideo extends javax.swing.JPanel {
    private List<Punto> ListaDePuntos = new ArrayList();
    private int contadorPuntos = 0;
    private boolean hayConexion = false;
    private String direccionIP = "";
    private Color colorPoint = Color.red;
    public BufferedImage frame = null;

    /** Creates new form PanelVideo */
    public PanelVideo() {
        
        initComponents();
    }

    public boolean isHayConexion() {
        return hayConexion;
    }

    public void setHayConexion(boolean hayConexion) {
        this.hayConexion = hayConexion;
    }
    
    public void setPoint(int x,int y, Color c){
        Punto p = new Punto((float)x,(float)y,(float)1.0,c);
        ListaDePuntos.add(p);
        contadorPuntos++;
    }
    


    public String getDireccionIP() {
        return direccionIP;
    }

    public void setDireccionIP(String direccionIP) {
        this.direccionIP = direccionIP;
    }
    


    @Override
    public void paintComponent(Graphics g) {
        //pintamos el frame de la url indicada
        Graphics2D g2 = (Graphics2D) g;
        g2.setColor(Color.white);
        g2.fillRect(0, 0, getWidth(), getHeight());
      

        if (hayConexion) {
            try {
                //leo el frame de la direccion ip
                URL nUrl = new URL(direccionIP);
                frame = ImageIO.read(nUrl);
                if (frame != null) {
                    //y lo pinto.
                    g2.drawImage(frame, 0, 0, this);
                    for(int i=0;i<ListaDePuntos.size();i++){
                        g2.setColor(ListaDePuntos.get(i).getColor());
                        g2.fillOval((int)ListaDePuntos.get(i).getx(),(int) ListaDePuntos.get(i).gety(), 5, 5);
                    }
                    repaint();
                }//excepciones
            } catch (MalformedURLException ex) {
                hayConexion = false;
                g2.drawString(ex.toString(), 5, 15);
            } catch (IOException ex) {
                hayConexion = false;
                g2.drawString(ex.toString(), 5, 15);
            }
        } else {//sino hay conexion entre dispositivos dejo la pantalla en negro.
            g2.setColor(Color.black);
           // g2.drawString("No se ha establecido conexiÃ³n con el dispositivo.", 5, 15);
        }
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(153, 153, 153), 2));
        setMaximumSize(new java.awt.Dimension(640, 480));
        setMinimumSize(new java.awt.Dimension(640, 480));
        setPreferredSize(new java.awt.Dimension(640, 480));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 636, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 476, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents
    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
